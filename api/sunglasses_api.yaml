swagger: "2.0"
info:
  title: SunGlasses API
  description: An API to support the sunglasses platform
  version: 1.0.0
host: api.sunglasses.com
schemes:
  - https
basePath: /v1
produces:
  - application/json
paths:
  /brands:
    get:
      tags:
        - Brands
      summary: Brands
      description: |
        The Brands endpoint allows you to search sunglasses brands based on different filters such as a search string
      parameters:
        - name: query
          in: query
          description: Search query string
          required: false
          type: string
      responses:
        "200":
          description: An array of brands
          schema:
            type: array
            items:
              $ref: "#/definitions/Brand"
        default:
          description: Unexpected error
          schema:
            $ref: "#/definitions/Error"
  /brands/{id}/products:
    get:
      tags:
        - Brands
      summary: Show a product
      description: |
        This endpoint allows you to get a sunglasses product with the given id
      parameters:
        - name: id
          in: path
          description: The id of the seached sunglasses
          required: true
          type: string
      responses:
        "200":
          description: Successful
        default:
          description: Unexpected error
          schema:
            $ref: "#/definitions/Error"
  /products:
    get:
      tags:
        - Products
      summary: Show products
      description: |
        This endpoint allows you to see all sunglasses products
      parameters:
        - name: query
          in: query
          description: An array of sunglasses products
          required: false
          type: string
      responses:
        "200":
          description: An array of products
          schema:
            type: array
            items:
              $ref: "#/definitions/Product"
        default:
          description: Unexpected error
          schema:
            $ref: "#/definitions/Error"
  /login:
    get:
      tags:
        - Login
      summary: User login
      description: |
        This endpoint allows users to login their own accounts
      parameters:
        - name: email
          in: path
          description: The username of the account
          required: true
          type: string
        - name: password
          in: path
          description: The password of the account
          required: true
          type: number
          format: int32
      responses:
        "200":
          description: Login Success
          schema:
            type: array
            items:
              $ref: "#/definitions/Login"
        default:
          description: Unexpected error
          schema:
            $ref: "#/definitions/Error"
  /me/cart:
    get:
      tags:
        - User
      summary: Get user cart
      description: |
        This User cart endpoint returns information about the user cart collections
      responses:
        "200":
          description: Profile information for a user
          schema:
            $ref: "#/definitions/User"
        default:
          description: Unexpected error
          schema:
            $ref: "#/definitions/Error"

    post:
      tags:
        - User
      summary: Post user cart
      description: |
        This User cart endpoint allows user to submit orders
      responses:
        "200":
          description: Acceptance is successful
        default:
          description: Unexpected error
          schema:
            $ref: "#/definitions/Error"
  /me/cart/{productId}:
    delete:
      tags:
        - User
      summary: Delete a product
      description: |
        This endpoint allows you to delete a product with the given productId
      parameters:
        - name: productId
          in: path
          description: The id of the product to delete
          required: true
          type: string
      responses:
        "200":
          description: Successful
        default:
          description: Unexpected error
          schema:
            $ref: "#/definitions/Error"

    post:
      tags:
        - User
      summary: Post a product
      description: |
        This endpoint allows you to post a product with the given productId
      parameters:
        - name: productId
          in: path
          description: The id of the product to post
          required: true
          type: string
      responses:
        "200":
          description: Successful
        default:
          description: Unexpected error
          schema:
            $ref: "#/definitions/Error"

definitions:
  Brand:
    type: object
    properties:
      id:
        type: string
        description: Unique identifier for a brand.
      name:
        type: string
        description: The name of the brand.
  Product:
    type: object
    properties:
      id:
        type: string
        description: >-
          Unique identifier for a product.
      categoryId:
        type: string
        description: >-
          The id of the category this product belongs to.
      name:
        type: string
        description: The name of the product.
      description:
        type: string
        description: Description of product.
      price:
        type: number
        format: int32
        description: The price of the product.
      imageUrls:
        type: array
        description: The urls for the images
  Name:
    type: object
    properties:
      title:
        type: string
        description: users title
      first:
        type: string
        description: Users first name.
      last:
        type: string
        description: Users last name.
  Location:
    type: object
    properties:
      street:
        type: string
        description: Street of the users address.
      city:
        type: string
        description: City of the users address.
      state:
        type: string
        description: State of the users address.
      postcode:
        type: integer
        format: int32
        description: Postcode of the users address.
  Login:
    type: object
    properties:
      username:
        type: string
        description: Username of the users login.
      password:
        type: string
        description: Password of the users login.
      salt:
        type: string
        description: Salt of the users login.
      md5:
        type: string
        description: md5 of the users login.
      sha1:
        type: string
        description: sha1 of the users login.
      sha256:
        type: string
        description: sha256 of the users login.
  Picture:
    type: object
    properties:
      large:
        type: string
        description: Users large profile picture.
      medium:
        type: string
        description: Users medium profile picture.
      thumbnail:
        type: string
        description: Users thumbnail profile picture.
  User:
    type: object
    properties:
      gender:
        type: string
        description: Gender of the user.
      cart:
        items:
          $ref: "#/definitions/Product"
      name:
        items:
          $ref: "#/definitions/Name"
      location:
        items:
          $ref: "#/definitions/Location"
      email:
        type: string
        description: Email of the user.
      login:
        items:
          $ref: "#/definitions/Login"
      dob:
        type: string
        description: Date of birth of the user.
      registered:
        type: string
        description: Registered date and time of the users account.
      phone:
        type: string
        description: Users phone number.
      cell:
        type: string
        description: Users cellphone number.
      picture:
        items:
          $ref: "#/definitions/Picture"
      nat:
        type: string
        description: Users nationality.
  Error:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      fields:
        type: string
